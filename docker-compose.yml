version: '3.9'
services:
  carmodel-api:
    build: ./carmodel-api
    image: jrweqlop/carmodel-api
    container_name: carmodel-api
    platform: linux/amd64
    restart: always
    ports:
      - "4500:3500"
    networks:
      - car-network
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:1234567890@postgres:5432/CarmodelDB?schema=public
      - SECRET_KEY=aec070645fe53ee3b3763059376134f058cc337247c978add178b6ccdfb0019f
      - PORT=3500
      # - DATABASE_URL=postgresql://postgres:1234567890@bookingdb:5432/bookingdb?schema=public
    volumes:
      - ./public:/app/public

  postgres:
    image: postgres:17.5
    container_name: postgres-carmodel
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234567890
      POSTGRES_DB: CarmodelDB
    ports:
      - "5870:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - car-network
    restart: unless-stopped

  websettingNew:
    build: ./websetting
    image: jrweqlop/carmodel-web-settingpi
    container_name: carmodel-web-settingpi
    platform: linux/amd64
    restart: always
    ports:
      - "4650:3000"
    environment:
      - PORT=3000
  websetting:
    build:
      context: ./websetting
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API: http://192.168.1.118:4500/api/ # ✅ ส่งเข้า build
    image: jrweqlop/carmodel-web-settingpi
    container_name: carmodel-web-settingpi
    platform: linux/amd64
    restart: always
    ports:
      - "3500:3000"
    networks:
      - car-network
    depends_on:
      - postgres
    environment:
      - NEXT_PUBLIC_API=http://192.168.1.118:4500/api/ # ✅ runtime ด้วย
      - PORT=3000

  my_nginx:
    image: nginx:1.29.0-alpine
    container_name: my_nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - carmodel-api
    volumes:
      # - ./nginx.conf:/etc/nginx/nginx.conf
      - ./conf.d:/etc/nginx/conf.d
    networks:
      - car-network

networks:
  car-network:
    driver: bridge
